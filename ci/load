#!/bin/bash

set -eo pipefail

_docker(){
    docker ${@}
}

dk_load(){
    _docker load
}

new_hash(){
    echo -e "\033[1mLoading: \033[32m${1}\033[0m"
    echo -e "\033[1mGetting new hash: \033[32m${IMAGE}:${CE_TAG}\033[0m"
    echo $(cat "${1}" | dk_load | sed -e 's/Loaded image ID: sha256://g' ) > "${2}"
}

tag_patch(){
    echo -e "\033[1mHash: \033[32m${1}\033[0m"
    echo -e "\033[1mTagging patched image as \033[32m${2}\033[0m"
    _docker tag "${1}" "${2}"
}

inspect(){
    echo -e "\033[1mInspecting: \033[32m${1}\033[0m"
    _docker image inspect "${1}" | grep Architecture
}

rm_oldimg(){
    echo -e "\033[1mRemoving old image: \033[32m${1}\033[0m"
    _docker rmi "${1}"
}

clean(){
    echo -e "\033[1mRemoving: \033[32munused files\033[0m"
    rm -rf gitlab/ utils/
}

new_hash utils/gitlab.tar utils/new_image_hash
export NEW_IMAGE_HASH=$(cat utils/new_image_hash)
tag_patch "${NEW_IMAGE_HASH}" "${IMAGE}:${CE_TAG}"
inspect "${IMAGE}:${CE_TAG}"

export OLD_IMAGE_HASH=$(cat utils/image_hash)
rm_oldimg "${OLD_IMAGE_HASH}"
clean
