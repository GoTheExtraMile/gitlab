stages:
- bin
- build
- release

.sample: &sample
  image: klud/docker:17.12
  services:
    - klud/docker:17.12-dind
  variables:
    DOCKER_DRIVER: overlay2
  tags:
    - docker
    - arm

mattermost:
  image: golang:1.9-alpine
  stage: bin
  tags:
    - amd64
  variables:
    BUILD_DATE: $(date -u)
    BUILD_HASH: $CI_COMMIT_SHA
    BUILD_NUMBER: 4.7.0
    CGO_ENABLED: 0
    GOARCH: arm
    GOARM: 6
  script:
    - apk add --no-cache git build-base file
    - go get -d github.com/mattermost/mattermost-server/cmd/platform
    - cd /go/src/github.com/mattermost/mattermost-server/cmd/platform
    - go build -a -ldflags="-s -w" -installsuffix cgo
    - file platform
    - cd -
    - mkdir binaries
    - cp /go/src/github.com/mattermost/mattermost-server/cmd/platform/platform binaries/platform
  artifacts:
    paths:
      - binaries/platform

test:
  <<: *sample
  stage: build
  only:
    - branches
  script:
    - apk add --no-cache make bash
    - cp binaries/platform docker/mattermost
    - chown 0:0 docker/mattermost
    - make build
  when: manual
  allow_failure: true
  dependencies:
    - mattermost

gitlab:
  <<: *sample
  stage: build
  only:
    - tags
  script:
    - apk add --no-cache make bash
    - cp binaries/platform docker/mattermost
    - chown 0:0 docker/mattermost
    - make build
  dependencies:
    - mattermost

registry:
  <<: *sample
  stage: release
  only:
    - tags
  script:
    - apk add --no-cache make bash
    - make push
  dependencies:
    - gitlab