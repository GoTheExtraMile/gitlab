stages:
- bin
- build
- patch
- push

.img: &imgJob
  image: docker:17.12
  services:
    - docker:17.12-dind
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
  tags:
    - docker
  dependencies:
    - mattermost

mattermost:
  image: golang:1.9-alpine
  stage: bin
  tags:
    - docker
  variables:
    BUILD_DATE: $(date -u)
    BUILD_HASH: $CI_COMMIT_SHA
    BUILD_NUMBER: 4.7.0
    CGO_ENABLED: 0
    GOARCH: arm
    GOARM: 6
  script:
    - apk add --no-cache git build-base file
    - go get -d -v github.com/mattermost/mattermost-server
    - cd /go/src/github.com/mattermost/mattermost-server
    - go build -a -ldflags="-s -w" -installsuffix cgo
    - file mattermost-server
    - cd -
    - mkdir utils
    - cp /go/src/github.com/mattermost/mattermost-server/mattermost-server utils/mattermost
  artifacts:
    paths:
      - utils/mattermost

test:
  <<: *imgJob
  only:
    - branches
  script:
    - apk add --no-cache make bash
    - cp utils/mattermost docker/mattermost
    - chown 0:0 docker/mattermost
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - make build
  when: manual
  allow_failure: true

gitlab:
  <<: *imgJob
  only:
    - tags
  script:
    - apk add --no-cache make bash
    - cp utils/mattermost docker/mattermost
    - chown 0:0 docker/mattermost
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - make build
    - make load
    - make push
